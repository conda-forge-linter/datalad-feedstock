From 5536b6d4c947ad3fed205107314fa2ed9bdbdc19 Mon Sep 17 00:00:00 2001
From: Yaroslav Halchenko <debian@onerussian.com>
Date: Wed, 13 Jun 2018 09:37:17 -0700
Subject: [PATCH] BF: auto -- also proxy os.stat call which is now used by
 nibabel while opening files

---
 datalad/auto.py            |  7 +++++++
 datalad/tests/test_auto.py | 17 +++++++++++++++--
 2 files changed, 22 insertions(+), 2 deletions(-)

diff --git a/datalad/auto.py b/datalad/auto.py
index 1144e26e..7dcdc48c 100644
--- a/datalad/auto.py
+++ b/datalad/auto.py
@@ -99,6 +99,7 @@ class AutomagicIO(object):
         self._active = False
         self._builtin_open = __builtin__.open
         self._io_open = io.open
+        self._os_stat = os.stat
         self._builtin_exists = os.path.exists
         self._builtin_isfile = os.path.isfile
         if h5py:
@@ -202,6 +203,10 @@ class AutomagicIO(object):
         return self._proxy_open_name_mode('io.open', self._io_open,
                                           *args, **kwargs)
 
+    def _proxy_os_stat(self, *args, **kwargs):
+        return self._proxy_open_name_mode('os.stat', self._os_stat,
+                                          *args, **kwargs)
+
     def _proxy_h5py_File(self, *args, **kwargs):
         return self._proxy_open_name_mode('h5py.File', self._h5py_File,
                                           *args, **kwargs)
@@ -310,6 +315,7 @@ class AutomagicIO(object):
         # overloads
         __builtin__.open = self._proxy_open
         io.open = self._proxy_io_open
+        os.stat = self._proxy_os_stat
         os.path.exists = self._proxy_exists
         os.path.isfile = self._proxy_isfile
         if h5py:
@@ -326,6 +332,7 @@ class AutomagicIO(object):
             return
         __builtin__.open = self._builtin_open
         io.open = self._io_open
+        os.stat = self._os_stat
         if h5py:
             h5py.File = self._h5py_File
         if lzma:
diff --git a/datalad/tests/test_auto.py b/datalad/tests/test_auto.py
index 0b4c23b4..21446319 100644
--- a/datalad/tests/test_auto.py
+++ b/datalad/tests/test_auto.py
@@ -119,13 +119,14 @@ def _test_proxying_open(generate_load, verify_load, repo):
     fpath1_2 = fpath1.replace(repo, repo2)
     fpath2_2 = fpath2.replace(repo, repo2)
 
-    assert_raises(IOError, verify_load, fpath1_2)
+    EXPECTED_EXCEPTIONS = (IOError, OSError)
+    assert_raises(EXPECTED_EXCEPTIONS, verify_load, fpath1_2)
 
     with AutomagicIO():
         # verify that it doesn't even try to get files which do not exist
         with patch('datalad.support.annexrepo.AnnexRepo.get') as gricm:
             # if we request absent file
-            assert_raises(IOError, open, fpath1_2+"_", 'r')
+            assert_raises(EXPECTED_EXCEPTIONS, open, fpath1_2+"_", 'r')
             # no get should be called
             assert_false(gricm.called)
         verify_load(fpath1_2)
@@ -244,3 +245,15 @@ def test_proxying_open_nibabel():
         assert_array_equal(ni.get_data(), d)
 
     yield _test_proxying_open, generate_nii, verify_nii
+
+
+def test_proxying_os_stat():
+    from os.path import exists
+    def generate_dat(f):
+        with io.open(f, "w", encoding='utf-8') as f:
+            f.write(u"123")
+
+    def verify_dat(f, mode="r"):
+        assert os.stat(f).st_size == 3
+
+    yield _test_proxying_open, generate_dat, verify_dat
\ No newline at end of file
-- 
2.17.0

