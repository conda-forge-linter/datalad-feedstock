From cbf8a82252841833fed8df6815a292355c5de8f1 Mon Sep 17 00:00:00 2001
From: Yaroslav Halchenko <debian@onerussian.com>
Date: Sun, 10 Jun 2018 13:09:44 -0400
Subject: [PATCH 2/2] ENH: support backports.lzma as an alternative to
 pyliblzma

conda does not have pyliblzma and since it is no longer maintained,
it was advised to use backports.lzma
---
 datalad/auto.py            |  3 +++
 datalad/support/json_py.py | 14 +-------------
 datalad/support/lzma.py    | 32 ++++++++++++++++++++++++++++++++
 datalad/tests/test_auto.py |  4 ++--
 setup.py                   |  4 ++++
 5 files changed, 42 insertions(+), 15 deletions(-)
 create mode 100644 datalad/support/lzma.py

diff --git a/datalad/auto.py b/datalad/auto.py
index 67d8f23b..1144e26e 100644
--- a/datalad/auto.py
+++ b/datalad/auto.py
@@ -54,6 +54,9 @@ except Exception as exc:
 
 lzma = None
 try:
+    # Our mocking would not work with backports.lzma ATM, so only lzma
+    # would be supported
+    # from datalad.support.lzma import lzma
     import lzma
 except ImportError:
     pass
diff --git a/datalad/support/json_py.py b/datalad/support/json_py.py
index e1af49be..f55c5133 100644
--- a/datalad/support/json_py.py
+++ b/datalad/support/json_py.py
@@ -69,19 +69,7 @@ def LZMAFile(*args, **kwargs):
     calling dir() helps to avoid AttributeError __exit__
     see https://bugs.launchpad.net/pyliblzma/+bug/1219296
     """
-    try:
-        import lzma
-    except Exception as exc:
-        if PY2 and 'undefined symbol: lzma_alone_encoder' in str(exc):
-            lgr.error(
-                "lzma fails to import and a typical problem is installation "
-                "of pyliblzma via pip while pkg-config utility is missing. "
-                "If you did installed it using pip, please "
-                "1) pip uninstall pyliblzma; "
-                "2) install pkg-config (e.g. apt-get install pkg-config on "
-                "Debian-based systems); "
-                "3) pip install pyliblzma again.")
-        raise
+    from .lzma import lzma
     lzmafile = lzma.LZMAFile(*args, **kwargs)
     dir(lzmafile)
     return lzmafile
diff --git a/datalad/support/lzma.py b/datalad/support/lzma.py
new file mode 100644
index 00000000..4b48dfad
--- /dev/null
+++ b/datalad/support/lzma.py
@@ -0,0 +1,32 @@
+# emacs: -*- mode: python; py-indent-offset: 4; tab-width: 4; indent-tabs-mode: nil -*-
+# ex: set sts=4 ts=4 sw=4 noet:
+# ## ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
+#
+#   See COPYING file distributed along with the datalad package for the
+#   copyright and license terms.
+#
+# ## ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ##
+"""Helper to deal with lzma module
+"""
+from __future__ import absolute_import
+
+from six import PY2
+from ..log import lgr
+
+exc1 = ''
+try:
+    try:
+        import lzma
+    except ImportError as exc1:
+        import backports.lzma as lzma
+except Exception as exc2:
+    if PY2 and 'undefined symbol: lzma_alone_encoder' in str(exc1):
+        lgr.error(
+            "lzma fails to import and a typical problem is installation "
+            "of pyliblzma via pip while pkg-config utility is missing. "
+            "If you did installed it using pip, please "
+            "1) pip uninstall pyliblzma; "
+            "2) install pkg-config (e.g. apt-get install pkg-config on "
+            "Debian-based systems); "
+            "3) pip install pyliblzma again.")
+    raise
diff --git a/datalad/tests/test_auto.py b/datalad/tests/test_auto.py
index b1a9ce38..0b4c23b4 100644
--- a/datalad/tests/test_auto.py
+++ b/datalad/tests/test_auto.py
@@ -211,8 +211,8 @@ from datalad.tests.utils import skip_if_no_module
 
 
 def test_proxying_lzma_LZMAFile():
-    skip_if_no_module('lzma')
-    import lzma
+    skip_if_no_module('datalad.support.lzma')
+    from datalad.support.lzma import lzma
 
     def generate_dat(f):
         with LZMAFile(f, "w") as f:
diff --git a/setup.py b/setup.py
index eb7bd927..8206cbd7 100755
--- a/setup.py
+++ b/setup.py
@@ -53,6 +53,10 @@ if dist[0] == 'debian' and dist[1].split('.', 1)[0] == '7':
     keyring_requires = ['keyring<8.0']
 
 # lzma is included in python since 3.3
+# We now support backports.lzma as well (besides AutomagicIO), but since
+# there is not way to define an alternative here (AFAIK, yoh), we will
+# use pyliblzma as the default for now.  Patch were you would prefer
+# backports.lzma instead
 req_lzma = ['pyliblzma'] if sys.version_info < (3, 3) else []
 
 
-- 
2.17.0

